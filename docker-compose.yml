version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - api

  # API service
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    volumes:
      - ./apps/api:/app
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=learnx
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db
      - redis
      - minio

  # AI service
  ai:
    build:
      context: ./apps/ai
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./apps/ai:/app
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=learnx
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db
      - redis
      - minio

  # Celery worker
  worker:
    build:
      context: ./workers/celery
      dockerfile: Dockerfile
    volumes:
      - ./workers/celery:/app
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=learnx
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
      - db
      - minio

  # PostgreSQL database
  db:
    image: ankane/pgvector:latest
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=learnx
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis for caching and message broker
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio
    ports:
      - "9002:9000"
      - "9003:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  # Create buckets in MinIO
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/learnx;
      /usr/bin/mc policy set public myminio/learnx;
      exit 0;
      "

volumes:
  postgres_data:
  redis_data:
  minio_data:
